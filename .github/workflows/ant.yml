name: Deploy Java Project to Remote RHEL VM

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install necessary tools (Ant, rsync, etc.) on the GitHub Actions runner
    - name: Install Apache Ant (if required)
      run: sudo apt-get update && sudo apt-get install -y ant rsync openssh-client

    # Step 3: Set up remote RHEL VM credentials using GitHub Secrets
    - name: Set up environment variables
      run: |
        echo "REMOTE_HOST=${{ secrets.REMOTE_HOST }}" >> $GITHUB_ENV
        echo "REMOTE_USER=${{ secrets.REMOTE_USER }}" >> $GITHUB_ENV
        echo "REMOTE_PASSWORD=${{ secrets.REMOTE_PASSWORD }}" >> $GITHUB_ENV

    # Step 4: Transfer the project files to the remote RHEL VM
    - name: Sync project files to remote RHEL VM
      run: |
        # Use rsync with password authentication to transfer files
        sshpass -p ${{ secrets.REMOTE_PASSWORD }} rsync -avz --exclude '.git' ./ ${REMOTE_USER}@${REMOTE_HOST}:/var/tmp/BillPayment/
    # Step 5: Run the Ant build command on the remote RHEL VM
    - name: Run Ant build remotely on RHEL VM
      run: |
        sshpass -p ${{ secrets.REMOTE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} << 'EOF'
          # Navigate to the project directory on the remote server
          cd /var/tmp/BillPayment/
          # Run the mqsiprofile command and build the project using Ant
          source /opt/ibm/mqsi/ace-12.0.3.0/server/bin/mqsiprofile
          echo "mqsiprofile has been executed."
          echo "Running build.xml"
          ant -noinput -buildfile BillPayment/build.xml
        EOF
